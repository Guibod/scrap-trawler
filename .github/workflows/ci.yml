name: CI Pipeline

on:
  push:
    branches:
      - monorepo
  pull_request:
    branches:
      - main
      - monorepo

permissions:
  contents: read

jobs:
  cog_check_job:
    runs-on: ubuntu-latest
    name: check conventional commit compliance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3
        with:
          git-user: 'Cog Bot'
          git-user-email: 'github-actions[bot]@users.noreply.github.com'
          check-latest-tag-only: true

  type-check-and-lint-and-test:
    name: Lint & Test (All Packages)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: true

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Linter (Biome)
        run: pnpm -r lint

      # Pre-bump: build to prepare plasmo
      - name: Dev build (extension)
        run: pnpm --filter extension run dev:build

      - name: Type-check extension
        run: pnpm --filter extension run type-check

      - name: Test extension
        run: pnpm --filter extension test

      - name: Test proxy
        run: pnpm --filter cloudflare-proxy test

      - name: Type-check & Build Site
        run: |
          pnpm --filter site run type-check
          pnpm --filter site run build

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: |
            extension/coverage/lcov.info
            cloudflare-proxy/coverage/lcov.info
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
